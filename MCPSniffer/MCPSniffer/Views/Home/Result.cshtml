@{
    ViewBag.Title = "Result";
    Layout = "_ResultLayout";
    var result = (List<MCPSniffer.Model.MCPFileInfo>)ViewData["Result"];
    string condition = ViewData["condition"].ToString();

}
<section id="resultSec" class="result">
    <ul id="resultUl">

        @{
            @functions{
				string GetKeyWordString(string oldValue, string keyword)
				{

					var lowerValue = oldValue.ToLower();
					var lowerKeyWords = keyword.ToLower();
					var length = lowerKeyWords.Length;

					int index = 0;

					List<string> keywords = new List<string>();

					while (lowerValue.IndexOf(lowerKeyWords, index) > -1)
					{
						index = lowerValue.IndexOf(lowerKeyWords, index);

						var key = oldValue.Substring(index, length);

						keywords.Add(key);

						index = index + length;

					}


					string newValue = oldValue;
					int count = 0;
					keywords = keywords.Distinct().ToList();
					var newList = new List<string>();
					foreach (var item in keywords)
					{
						var formatStr = string.Format("{{0}}", count);
						newValue = newValue.Replace(item, formatStr);
						count++;
						var newKeyWord = string.Format("<em>{0}</em>", item);
						newList.Add(newKeyWord);
					}

					try
					{
						newValue = string.Format(newValue, newList.ToArray());
					}
					catch { }

					return newValue;

				}
			}

            @functions
            {
                string ParseContent(string originalStr, string condition)
                {

                    int maxLength = 200;
                    int prefixLength = 5;
                    if (originalStr.Length < maxLength)
                        return GetKeyWordString(originalStr, condition); ;

                    var originaLowerValue = originalStr.ToLower();
                    var conditionLower = condition.ToLower();
                    var length = originalStr.Length;

                    string placeholder = "...";



                    var index = originaLowerValue.IndexOf(conditionLower, 0);
                    int startIndex = 0;
                    if (index > prefixLength)
                    {
                        startIndex = index - prefixLength;
                    }

                    bool addToEnd = false;
                    bool addToBegin = false;
                    if (length - startIndex > maxLength)
                    {
                        addToEnd = true;
                    }

                    if (startIndex > 0)
                    {
                        addToBegin = true;
                    }


                    var substring = originalStr.Substring(startIndex, maxLength);

                    var result = GetKeyWordString(substring, condition);

                    if (addToBegin)
                        result = placeholder + result;
                    if (addToEnd)
                        result = result + placeholder;

                    return result;
                }
            }

            if (result.Count > 0)
            {
                foreach (var item in result)
                {
                    <li>
                        <div>
                            <h3><a href="Detail?id=@item.Id&condition=@condition">@(Html.Raw(GetKeyWordString(item.Name, condition)))</a></h3>
                            <p>
                                Last Modify:@item.LastModifyTime <br />

                                @(Html.Raw(ParseContent(item.Content, condition)))
                            </p>
                        </div>
                    </li>
                }
            }
            else
            {
                <li>
                    <div>

                        <img src="~/images/nodata.png" style="width:850px;height:500px;" />

                    </div>
                </li>
            }
        }


    </ul>
</section>